import{S as as,i as ns,s as ts,a1 as es,a3 as ps,e as x,t as I,k as E,j as m,c as y,a as j,g as L,d as l,n as C,m as k,b as os,f,F as K,o as g,a4 as ls,x as _,u as v,v as d,T as A}from"../../../chunks/vendor-2d38661a.js";/* empty css                                                            */import{P as Q}from"../../../chunks/Progress-fdc59794.js";import{G as rs,C as R}from"../../../chunks/Col-13724cd8.js";import{K as cs}from"../../../chunks/_knobs-3556d2fe.js";function us(c){let a,e;return a=new Q({props:{value:c[0].value,max:c[0].max,color:c[0].color,invert:c[0].invert}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p(s,p){const r={};p&1&&(r.value=s[0].value),p&1&&(r.max=s[0].max),p&1&&(r.color=s[0].color),p&1&&(r.invert=s[0].invert),a.$set(r)},i(s){e||(_(a.$$.fragment,s),e=!0)},o(s){v(a.$$.fragment,s),e=!1},d(s){d(a,s)}}}function is(c){let a,e;return a=new Q({props:{value:"50",max:"100",color:"warning"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:A,i(s){e||(_(a.$$.fragment,s),e=!0)},o(s){v(a.$$.fragment,s),e=!1},d(s){d(a,s)}}}function fs(c){let a,e;return a=new Q({props:{value:"25",max:"100",color:"success"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:A,i(s){e||(_(a.$$.fragment,s),e=!0)},o(s){v(a.$$.fragment,s),e=!1},d(s){d(a,s)}}}function $s(c){let a,e;return a=new Q({props:{color:"error"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:A,i(s){e||(_(a.$$.fragment,s),e=!0)},o(s){v(a.$$.fragment,s),e=!1},d(s){d(a,s)}}}function ms(c){let a,e,s,p,r,b,i,$;return a=new R({props:{col:"6",xs:"12",$$slots:{default:[us]},$$scope:{ctx:c}}}),s=new R({props:{col:"6",xs:"12",$$slots:{default:[is]},$$scope:{ctx:c}}}),r=new R({props:{col:"6",xs:"12",$$slots:{default:[fs]},$$scope:{ctx:c}}}),i=new R({props:{col:"6",xs:"12",$$slots:{default:[$s]},$$scope:{ctx:c}}}),{c(){m(a.$$.fragment),e=E(),m(s.$$.fragment),p=E(),m(r.$$.fragment),b=E(),m(i.$$.fragment)},l(t){k(a.$$.fragment,t),e=C(t),k(s.$$.fragment,t),p=C(t),k(r.$$.fragment,t),b=C(t),k(i.$$.fragment,t)},m(t,o){g(a,t,o),f(t,e,o),g(s,t,o),f(t,p,o),g(r,t,o),f(t,b,o),g(i,t,o),$=!0},p(t,o){const O={};o&5&&(O.$$scope={dirty:o,ctx:t}),a.$set(O);const S={};o&4&&(S.$$scope={dirty:o,ctx:t}),s.$set(S);const T={};o&4&&(T.$$scope={dirty:o,ctx:t}),r.$set(T);const P={};o&4&&(P.$$scope={dirty:o,ctx:t}),i.$set(P)},i(t){$||(_(a.$$.fragment,t),_(s.$$.fragment,t),_(r.$$.fragment,t),_(i.$$.fragment,t),$=!0)},o(t){v(a.$$.fragment,t),v(s.$$.fragment,t),v(r.$$.fragment,t),v(i.$$.fragment,t),$=!1},d(t){d(a,t),t&&l(e),d(s,t),t&&l(p),d(r,t),t&&l(b),d(i,t)}}}function ks(c){let a,e,s,p,r,b,i,$,t,o,O,S,T,P,h,B,z,w,U,D,q,Y=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Progress <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>75<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`,F;h=new rs({props:{stack:!0,$$slots:{default:[ms]},$$scope:{ctx:c}}});function Z(n){c[1](n)}let J={config:_s};return c[0]!==void 0&&(J.state=c[0]),w=new cs({props:J}),es.push(()=>ps(w,"state",Z)),{c(){a=x("h1"),e=I(X),s=E(),p=x("p"),r=I("The Progress indicates the progress completion of a task."),b=E(),i=x("blockquote"),$=x("p"),t=I("If "),o=x("code"),O=I("value === null || undefined"),S=I(" it have indeterminate/loading state"),T=E(),P=x("p"),m(h.$$.fragment),B=E(),z=x("p"),m(w.$$.fragment),D=E(),q=x("pre"),this.h()},l(n){a=y(n,"H1",{});var u=j(a);e=L(u,X),u.forEach(l),s=C(n),p=y(n,"P",{});var G=j(p);r=L(G,"The Progress indicates the progress completion of a task."),G.forEach(l),b=C(n),i=y(n,"BLOCKQUOTE",{});var H=j(i);$=y(H,"P",{});var M=j($);t=L(M,"If "),o=y(M,"CODE",{});var N=j(o);O=L(N,"value === null || undefined"),N.forEach(l),S=L(M," it have indeterminate/loading state"),M.forEach(l),H.forEach(l),T=C(n),P=y(n,"P",{});var V=j(P);k(h.$$.fragment,V),V.forEach(l),B=C(n),z=y(n,"P",{});var W=j(z);k(w.$$.fragment,W),W.forEach(l),D=C(n),q=y(n,"PRE",{class:!0});var ss=j(q);ss.forEach(l),this.h()},h(){os(q,"class","language-sv")},m(n,u){f(n,a,u),K(a,e),f(n,s,u),f(n,p,u),K(p,r),f(n,b,u),f(n,i,u),K(i,$),K($,t),K($,o),K(o,O),K($,S),f(n,T,u),f(n,P,u),g(h,P,null),f(n,B,u),f(n,z,u),g(w,z,null),f(n,D,u),f(n,q,u),q.innerHTML=Y,F=!0},p(n,[u]){const G={};u&5&&(G.$$scope={dirty:u,ctx:n}),h.$set(G);const H={};!U&&u&1&&(U=!0,H.state=n[0],ls(()=>U=!1)),w.$set(H)},i(n){F||(_(h.$$.fragment,n),_(w.$$.fragment,n),F=!0)},o(n){v(h.$$.fragment,n),v(w.$$.fragment,n),F=!1},d(n){n&&l(a),n&&l(s),n&&l(p),n&&l(b),n&&l(i),n&&l(T),n&&l(P),d(h),n&&l(B),n&&l(z),d(w),n&&l(D),n&&l(q)}}}const gs={file:"progress.md",title:"Progress",api:[{title:"value: number = undefined",description:"Progress value",variables:"any number"},{title:"max: number = 0",description:"Progress max",variables:"any number"},{title:'color: Colors = "light"',description:"Progress color",variables:"gray | light | primary | secondary | success | error"},{title:"invert: boolean = false",description:"Progress invert",variables:"true | false"}],config:{value:{type:"number",min:0,max:100,size:5},max:{type:"number",min:0,max:100,size:5},color:{options:["gray","light","primary","secondary","success","error"]},invert:{type:"checkbox"}}},{file:xs,title:X,api:Es,config:_s}=gs;function vs(c,a,e){let s={value:75,max:100,color:"primary",invert:!1};function p(r){s=r,e(0,s)}return[s,p]}class ys extends as{constructor(a){super();ns(this,a,vs,ks,ts,{})}}export{ys as default,gs as metadata};

import{S as as,i as ns,s as ts,a5 as es,a6 as ps,e as x,t as G,k as E,w as m,c as y,a as C,h as I,d as l,m as j,x as k,b as os,g as f,H,y as g,a7 as ls,q as _,o as v,B as b,V as A}from"../../../chunks/vendor-34a2d25b.js";/* empty css                                                            */import{P as R}from"../../../chunks/Progress-442f0012.js";import{G as rs,C as U}from"../../../chunks/Col-f6c9b6da.js";import{K as cs}from"../../../chunks/_knobs-252a7b5e.js";function us(c){let a,e;return a=new R({props:{value:c[0].value,max:c[0].max,color:c[0].color,invert:c[0].invert}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p(s,p){const r={};p&1&&(r.value=s[0].value),p&1&&(r.max=s[0].max),p&1&&(r.color=s[0].color),p&1&&(r.invert=s[0].invert),a.$set(r)},i(s){e||(_(a.$$.fragment,s),e=!0)},o(s){v(a.$$.fragment,s),e=!1},d(s){b(a,s)}}}function is(c){let a,e;return a=new R({props:{value:"50",max:"100",color:"warning"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:A,i(s){e||(_(a.$$.fragment,s),e=!0)},o(s){v(a.$$.fragment,s),e=!1},d(s){b(a,s)}}}function fs(c){let a,e;return a=new R({props:{value:"25",max:"100",color:"success"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:A,i(s){e||(_(a.$$.fragment,s),e=!0)},o(s){v(a.$$.fragment,s),e=!1},d(s){b(a,s)}}}function $s(c){let a,e;return a=new R({props:{color:"error"}}),{c(){m(a.$$.fragment)},l(s){k(a.$$.fragment,s)},m(s,p){g(a,s,p),e=!0},p:A,i(s){e||(_(a.$$.fragment,s),e=!0)},o(s){v(a.$$.fragment,s),e=!1},d(s){b(a,s)}}}function ms(c){let a,e,s,p,r,d,i,$;return a=new U({props:{col:"6",xs:"12",$$slots:{default:[us]},$$scope:{ctx:c}}}),s=new U({props:{col:"6",xs:"12",$$slots:{default:[is]},$$scope:{ctx:c}}}),r=new U({props:{col:"6",xs:"12",$$slots:{default:[fs]},$$scope:{ctx:c}}}),i=new U({props:{col:"6",xs:"12",$$slots:{default:[$s]},$$scope:{ctx:c}}}),{c(){m(a.$$.fragment),e=E(),m(s.$$.fragment),p=E(),m(r.$$.fragment),d=E(),m(i.$$.fragment)},l(t){k(a.$$.fragment,t),e=j(t),k(s.$$.fragment,t),p=j(t),k(r.$$.fragment,t),d=j(t),k(i.$$.fragment,t)},m(t,o){g(a,t,o),f(t,e,o),g(s,t,o),f(t,p,o),g(r,t,o),f(t,d,o),g(i,t,o),$=!0},p(t,o){const K={};o&5&&(K.$$scope={dirty:o,ctx:t}),a.$set(K);const O={};o&4&&(O.$$scope={dirty:o,ctx:t}),s.$set(O);const q={};o&4&&(q.$$scope={dirty:o,ctx:t}),r.$set(q);const P={};o&4&&(P.$$scope={dirty:o,ctx:t}),i.$set(P)},i(t){$||(_(a.$$.fragment,t),_(s.$$.fragment,t),_(r.$$.fragment,t),_(i.$$.fragment,t),$=!0)},o(t){v(a.$$.fragment,t),v(s.$$.fragment,t),v(r.$$.fragment,t),v(i.$$.fragment,t),$=!1},d(t){b(a,t),t&&l(e),b(s,t),t&&l(p),b(r,t),t&&l(d),b(i,t)}}}function ks(c){let a,e,s,p,r,d,i,$,t,o,K,O,q,P,h,L,S,w,V,D,T,Y=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Progress <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>75<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>warning<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>25<span class="token punctuation">"</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>100<span class="token punctuation">"</span></span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>success<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Progress</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>`,M;h=new rs({props:{stack:!0,$$slots:{default:[ms]},$$scope:{ctx:c}}});function Z(n){c[1](n)}let F={config:_s};return c[0]!==void 0&&(F.state=c[0]),w=new cs({props:F}),es.push(()=>ps(w,"state",Z)),{c(){a=x("h1"),e=G(X),s=E(),p=x("p"),r=G("The Progress indicates the progress completion of a task."),d=E(),i=x("blockquote"),$=x("p"),t=G("If "),o=x("code"),K=G("value === null || undefined"),O=G(" it have indeterminate/loading state"),q=E(),P=x("p"),m(h.$$.fragment),L=E(),S=x("p"),m(w.$$.fragment),D=E(),T=x("pre"),this.h()},l(n){a=y(n,"H1",{});var u=C(a);e=I(u,X),u.forEach(l),s=j(n),p=y(n,"P",{});var z=C(p);r=I(z,"The Progress indicates the progress completion of a task."),z.forEach(l),d=j(n),i=y(n,"BLOCKQUOTE",{});var B=C(i);$=y(B,"P",{});var Q=C($);t=I(Q,"If "),o=y(Q,"CODE",{});var J=C(o);K=I(J,"value === null || undefined"),J.forEach(l),O=I(Q," it have indeterminate/loading state"),Q.forEach(l),B.forEach(l),q=j(n),P=y(n,"P",{});var N=C(P);k(h.$$.fragment,N),N.forEach(l),L=j(n),S=y(n,"P",{});var W=C(S);k(w.$$.fragment,W),W.forEach(l),D=j(n),T=y(n,"PRE",{class:!0});var ss=C(T);ss.forEach(l),this.h()},h(){os(T,"class","language-sv")},m(n,u){f(n,a,u),H(a,e),f(n,s,u),f(n,p,u),H(p,r),f(n,d,u),f(n,i,u),H(i,$),H($,t),H($,o),H(o,K),H($,O),f(n,q,u),f(n,P,u),g(h,P,null),f(n,L,u),f(n,S,u),g(w,S,null),f(n,D,u),f(n,T,u),T.innerHTML=Y,M=!0},p(n,[u]){const z={};u&5&&(z.$$scope={dirty:u,ctx:n}),h.$set(z);const B={};!V&&u&1&&(V=!0,B.state=n[0],ls(()=>V=!1)),w.$set(B)},i(n){M||(_(h.$$.fragment,n),_(w.$$.fragment,n),M=!0)},o(n){v(h.$$.fragment,n),v(w.$$.fragment,n),M=!1},d(n){n&&l(a),n&&l(s),n&&l(p),n&&l(d),n&&l(i),n&&l(q),n&&l(P),b(h),n&&l(L),n&&l(S),b(w),n&&l(D),n&&l(T)}}}const gs={file:"progress.md",title:"Progress",api:[{title:"value: number = undefined",description:"Progress value",variables:"any number"},{title:"max: number = 0",description:"Progress max",variables:"any number"},{title:'color: Colors = "light"',description:"Progress color",variables:"gray | light | primary | secondary | success | error"},{title:"invert: boolean = false",description:"Progress invert",variables:"true | false"}],config:{value:{type:"number",min:0,max:100,size:5},max:{type:"number",min:0,max:100,size:5},color:{options:["gray","light","primary","secondary","success","error"]},invert:{type:"checkbox"}}},{file:xs,title:X,api:Es,config:_s}=gs;function vs(c,a,e){let s={value:75,max:100,color:"primary",invert:!1};function p(r){s=r,e(0,s)}return[s,p]}class ys extends as{constructor(a){super();ns(this,a,vs,ks,ts,{})}}export{ys as default,gs as metadata};

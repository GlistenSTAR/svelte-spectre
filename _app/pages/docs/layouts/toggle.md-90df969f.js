import{S as X,i as Y,s as Z,$ as z,W as G,X as J,Y as Q,x as w,u as H,k as B,l as U,n as L,f as k,r as ut,w as ft,d as r,a3 as V,a4 as x,e as b,t as S,j as K,c as h,a as v,g as C,m as O,b as tt,F as d,o as R,a5 as st,v as A,O as kt,Z as nt,_ as at,h as _t}from"../../../chunks/vendor-98762a9b.js";/* empty css                                                            */import{B as et}from"../../../chunks/Button-251cc552.js";import{K as mt}from"../../../chunks/_knobs-0936b66f.js";import"../../../chunks/action-63149ef0.js";import"../../../chunks/Col-6723229d.js";const dt=c=>({}),ot=c=>({});function lt(c){let t;const a=c[2].default,s=z(a,c,c[1],null);return{c(){s&&s.c()},l(n){s&&s.l(n)},m(n,o){s&&s.m(n,o),t=!0},p(n,o){s&&s.p&&(!t||o&2)&&G(s,a,n,n[1],t?Q(a,n[1],o,null):J(n[1]),null)},i(n){t||(w(s,n),t=!0)},o(n){H(s,n),t=!1},d(n){s&&s.d(n)}}}function $t(c){let t,a,s;const n=c[2].toggler,o=z(n,c,c[1],ot);let l=c[0]&&lt(c);return{c(){o&&o.c(),t=B(),l&&l.c(),a=U()},l(p){o&&o.l(p),t=L(p),l&&l.l(p),a=U()},m(p,i){o&&o.m(p,i),k(p,t,i),l&&l.m(p,i),k(p,a,i),s=!0},p(p,[i]){o&&o.p&&(!s||i&2)&&G(o,n,p,p[1],s?Q(n,p[1],i,dt):J(p[1]),ot),p[0]?l?(l.p(p,i),i&1&&w(l,1)):(l=lt(p),l.c(),w(l,1),l.m(a.parentNode,a)):l&&(ut(),H(l,1,1,()=>{l=null}),ft())},i(p){s||(w(o,p),w(l),s=!0)},o(p){H(o,p),H(l),s=!1},d(p){o&&o.d(p),p&&r(t),l&&l.d(p),p&&r(a)}}}function bt(c,t,a){let{$$slots:s={},$$scope:n}=t,{toggle:o=!1}=t;return c.$$set=l=>{"toggle"in l&&a(0,o=l.toggle),"$$scope"in l&&a(1,n=l.$$scope)},[o,n,s]}class ht extends X{constructor(t){super();Y(this,t,bt,$t,Z,{toggle:0})}}function vt(c){let t;return{c(){t=S("Hide toggled content")},l(a){t=C(a,"Hide toggled content")},m(a,s){k(a,t,s)},d(a){a&&r(t)}}}function Tt(c){let t,a,s,n,o,l,p,i,_,m;return i=new et({props:{$$slots:{default:[vt]},$$scope:{ctx:c}}}),i.$on("click",c[2]),{c(){t=b("article"),a=b("h3"),s=S("Toggled content"),n=B(),o=b("p"),l=S("This is the toggled content."),p=B(),K(i.$$.fragment)},l(g){t=h(g,"ARTICLE",{});var f=v(t);a=h(f,"H3",{});var $=v(a);s=C($,"Toggled content"),$.forEach(r),n=L(f),o=h(f,"P",{});var T=v(o);l=C(T,"This is the toggled content."),T.forEach(r),p=L(f),O(i.$$.fragment,f),f.forEach(r)},m(g,f){k(g,t,f),d(t,a),d(a,s),d(t,n),d(t,o),d(o,l),d(t,p),R(i,t,null),m=!0},p(g,f){const $={};f&32&&($.$$scope={dirty:f,ctx:g}),i.$set($)},i(g){m||(w(i.$$.fragment,g),kt(()=>{_||(_=nt(t,at,{},!0)),_.run(1)}),m=!0)},o(g){H(i.$$.fragment,g),_||(_=nt(t,at,{},!1)),_.run(0),m=!1},d(g){g&&r(t),A(i),g&&_&&_.end()}}}function Et(c){let t=(c[0].toggle?"Hide content":"Show content")+"",a;return{c(){a=S(t)},l(s){a=C(s,t)},m(s,n){k(s,a,n)},p(s,n){n&1&&t!==(t=(s[0].toggle?"Hide content":"Show content")+"")&&_t(a,t)},d(s){s&&r(a)}}}function wt(c){let t,a,s;return a=new et({props:{variant:"primary",$$slots:{default:[Et]},$$scope:{ctx:c}}}),a.$on("click",c[1]),{c(){t=b("p"),K(a.$$.fragment),this.h()},l(n){t=h(n,"P",{slot:!0});var o=v(t);O(a.$$.fragment,o),o.forEach(r),this.h()},h(){tt(t,"slot","toggler")},m(n,o){k(n,t,o),R(a,t,null),s=!0},p(n,o){const l={};o&33&&(l.$$scope={dirty:o,ctx:n}),a.$set(l)},i(n){s||(w(a.$$.fragment,n),s=!0)},o(n){H(a.$$.fragment,n),s=!1},d(n){n&&r(t),A(a)}}}function jt(c){let t,a,s,n,o,l,p,i,_,m,g,f,$,T,E,D,M,y,ct=`<code class="language-sv"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> fade <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte/transition'</span>
    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> Button<span class="token punctuation">,</span> Toggle <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'svelte-spectre'</span>

    <span class="token keyword">let</span> toggle <span class="token operator">=</span> <span class="token boolean">false</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Toggle</span> <span class="token attr-name"><span class="token namespace">bind:</span>toggle</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span> <span class="token attr-name">slot</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toggler<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">on:</span>click=</span><span class="token language-javascript"><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> toggle <span class="token operator">=</span> <span class="token operator">!</span>toggle<span class="token punctuation">&#125;</span></span><span class="token punctuation">></span></span>
        <span class="token language-javascript"><span class="token punctuation">&#123;</span>toggle <span class="token operator">?</span> <span class="token string">'Hide'</span> <span class="token operator">:</span> <span class="token string">'Show'</span><span class="token punctuation">&#125;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name"><span class="token namespace">transition:</span>fade</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>Toggled header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Toggled content<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Toggle</span><span class="token punctuation">></span></span></code>`,q;function it(e){c[3](e)}let F={$$slots:{toggler:[wt],default:[Tt]},$$scope:{ctx:c}};c[0].toggle!==void 0&&(F.toggle=c[0].toggle),g=new ht({props:F}),V.push(()=>x(g,"toggle",it));function rt(e){c[4](e)}let I={config:St};return c[0]!==void 0&&(I.state=c[0]),E=new mt({props:I}),V.push(()=>x(E,"state",rt)),{c(){t=b("h1"),a=S(pt),s=B(),n=b("p"),o=S(`Toggle are flexible toggler wraper provides just slots for content & toggle
control & 1 variable `),l=b("code"),p=S("toggle: boolen"),i=S("."),_=B(),m=b("p"),K(g.$$.fragment),$=B(),T=b("p"),K(E.$$.fragment),M=B(),y=b("pre"),this.h()},l(e){t=h(e,"H1",{});var u=v(t);a=C(u,pt),u.forEach(r),s=L(e),n=h(e,"P",{});var j=v(n);o=C(j,`Toggle are flexible toggler wraper provides just slots for content & toggle
control & 1 variable `),l=h(j,"CODE",{});var P=v(l);p=C(P,"toggle: boolen"),P.forEach(r),i=C(j,"."),j.forEach(r),_=L(e),m=h(e,"P",{});var N=v(m);O(g.$$.fragment,N),N.forEach(r),$=L(e),T=h(e,"P",{});var W=v(T);O(E.$$.fragment,W),W.forEach(r),M=L(e),y=h(e,"PRE",{class:!0});var gt=v(y);gt.forEach(r),this.h()},h(){tt(y,"class","language-sv")},m(e,u){k(e,t,u),d(t,a),k(e,s,u),k(e,n,u),d(n,o),d(n,l),d(l,p),d(n,i),k(e,_,u),k(e,m,u),R(g,m,null),k(e,$,u),k(e,T,u),R(E,T,null),k(e,M,u),k(e,y,u),y.innerHTML=ct,q=!0},p(e,[u]){const j={};u&33&&(j.$$scope={dirty:u,ctx:e}),!f&&u&1&&(f=!0,j.toggle=e[0].toggle,st(()=>f=!1)),g.$set(j);const P={};!D&&u&1&&(D=!0,P.state=e[0],st(()=>D=!1)),E.$set(P)},i(e){q||(w(g.$$.fragment,e),w(E.$$.fragment,e),q=!0)},o(e){H(g.$$.fragment,e),H(E.$$.fragment,e),q=!1},d(e){e&&r(t),e&&r(s),e&&r(n),e&&r(_),e&&r(m),A(g),e&&r($),e&&r(T),A(E),e&&r(M),e&&r(y)}}}const Ht={file:"toggle.md",title:"Toggle",api:[{title:'<slot name="toggler">: HTMLElement | SvelteComponent',description:"Toggle toggler",variables:"HTMLElement | SvelteComponent"},{title:"<slot>: HTMLElement | SvelteComponent",description:"Toggle content",variables:"HTMLElement | SvelteComponent"},{title:"toggle: boolean = false",description:"Toggle toggle state",variables:"true | false"}],config:{toggle:{type:"checkbox"}}},{file:Kt,title:pt,api:Ot,config:St}=Ht;function Ct(c,t,a){let s={toggle:!1};const n=()=>a(0,s.toggle=!s.toggle,s),o=()=>a(0,s.toggle=!1,s);function l(i){c.$$.not_equal(s.toggle,i)&&(s.toggle=i,a(0,s))}function p(i){s=i,a(0,s)}return[s,n,o,l,p]}class Rt extends X{constructor(t){super();Y(this,t,Ct,jt,Z,{})}}export{Rt as default,Ht as metadata};
